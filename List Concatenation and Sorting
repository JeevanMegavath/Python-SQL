# Approach 1: Using List Concatenation and Sorting
list1 = [1, 3, 5]
list2 = [2, 4, 6]
merged_list = list1 + list2
merged_list.sort()
print(merged_list)

# Approach 2: Using List Concatenation with Sorted()
list1 = [1, 3, 5]
list2 = [2, 4, 6]
merged_list = sorted(list1 + list2)
print(merged_list)

# Approach 3: Using the Extend() Method and Sorting
list1 = [1, 3, 5]
list2 = [2, 4, 6]
list1.extend(list2)
list1.sort()
print(list1)

# Approach 4: Using List Comprehension and Sorting
list1 = [1, 3, 5]
list2 = [2, 4, 6]
merged_list = sorted([*list1, *list2])
print(merged_list)

# Approach 5: Using the Sorted() Function with Unpacking
list1 = [1, 3, 5]
list2 = [2, 4, 6]
merged_list = sorted((*list1, *list2))
print(merged_list)

# Approach 6: Using Set Union and Sorting
list1 = [1, 3, 5]
list2 = [2, 4, 6]
merged_list = sorted(set(list1).union(list2))
print(merged_list)

# Approach 7: Using the Sorted() Function with Chain()
from itertools import chain
list1 = [1, 3, 5]
list2 = [2, 4, 6]
merged_list = sorted(chain(list1, list2))
print(merged_list)
